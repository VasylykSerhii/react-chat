{"version":3,"sources":["redux/chat/actionsTypes.ts","redux/chat/reducers.ts","redux/user/actionsTypes.ts","redux/user/reducers.ts","redux/reducers.ts","redux/chat/sagas.ts","redux/chat/actionsCreators.ts","redux/user/actionsCreators.ts","redux/user/sagas.ts","redux/sagas.ts","redux/store.ts","history.ts","helpest/PrivateRouter/index.tsx","firebase.ts","components/Menu/style.component.ts","components/Menu/index.tsx","components/Layout/style.component.ts","components/Layout/index.tsx","pages/Chat/style.component.tsx","components/Message/style.component.tsx","components/Message/index.tsx","pages/Chat/index.tsx","pages/Log-In/style.component.tsx","components/LogInForm/style-component.ts","assets/images/man-300x300.png","components/LogInForm/index.tsx","pages/Log-In/index.tsx","routes.tsx","helpest/app/theme.tsx","helpest/app/index.tsx","index.tsx"],"names":["SET_STATE_CHAT_ACTION","GET_STATE_CHAT_ACTION","initialState","data","loading","SET_USER_ACTION","GET_USER_ACTION","email","lastName","firstName","id","picture","isAuth","rootReducer","combineReducers","chats","state","action","type","user","GET_STATE_CHAT","rootSaga","put","all","takeEvery","setUseCreation","payload","getUseCreation","GET_USER","additionalUserInfo","profile","family_name","given_name","accessToken","credential","localStorage","setItem","chat","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","sagas","history","createBrowserHistory","basename","PrivateRoute","children","rest","render","props","getItem","to","pathname","from","location","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","MenuWrap","styled","div","Wraper","LogOutBtn","button","theme","colors","light","Menu","useHistory","onClick","signOut","then","removeItem","push","catch","error","Layout","Wrapper","Chat","Messages","InputWrap","Textarea","StyledIcon","FontAwesomeIcon","MessageWrap","myMessage","Avatar","img","MessageText","Name","p","Text","Message","message","key","currentUser","uid","src","photoURL","fullName","text","Home","useState","setMessage","messagesRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","textDiv","useRef","last","send","e","a","ctrlKey","charCode","add","createdAt","FieldValue","serverTimestamp","displayName","current","innerHTML","useEffect","scrollIntoView","behavior","map","ref","contentEditable","onInput","target","outerText","onKeyPress","icon","faPaperPlane","size","section","dark","main","Img","Form","form","Input","input","Button","Link","SocialWrap","LogIn","dispatch","useDispatch","isRegister","setIsRegister","setEmail","password","setPassword","register","useCallback","createUserWithEmailAndPassword","console","log","signIn","signInWithEmailAndPassword","res","manImg","alt","faUser","color","placeholder","onChange","value","faLock","faGooglePlus","provider","GoogleAuthProvider","signInWithPopup","result","code","faFacebook","LogInForm","Routes","path","exact","gray","fonts","Theme","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe6201dc.chunk.js","sourcesContent":["export const SET_STATE_CHAT_ACTION = \"SET_STATE_CHAT_ACTION\";\r\nexport const GET_STATE_CHAT_ACTION = \"GET_STATE_CHAT_ACTION\";\r\n","import { AnyAction } from \"redux\";\r\nimport { SET_STATE_CHAT_ACTION} from \"./actionsTypes\";\r\n\r\nexport interface IChatState {\r\n  data: [];\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: IChatState = {\r\n  data: [],\r\n  loading: false,\r\n};\r\n\r\nexport default function userReducer(\r\n  state = initialState,\r\n  action: AnyAction\r\n) {\r\n  switch (action.type) {\r\n    case SET_STATE_CHAT_ACTION:\r\n      return { ...state, ...action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SET_USER_ACTION = \"SET_USER_ACTION\";\r\nexport const GET_USER_ACTION = \"GET_USER_ACTION\";\r\n","import { AnyAction } from \"redux\";\r\nimport { SET_USER_ACTION } from \"./actionsTypes\";\r\n\r\nexport interface IUserState {\r\n  email: string;\r\n  lastName: string;\r\n  firstName: string;\r\n  id: string;\r\n  picture: string;\r\n  loading: boolean;\r\n  isAuth: boolean;\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  email: \"\",\r\n  lastName: \"\",\r\n  firstName: \"\",\r\n  id: \"\",\r\n  picture: \"\",\r\n  loading: false,\r\n  isAuth: false,\r\n};\r\n\r\nexport default function userReducer(state = initialState, action: AnyAction) {\r\n  switch (action.type) {\r\n    case SET_USER_ACTION:\r\n      return { ...state, ...action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport chats from './chat/reducers'\r\nimport user from './user/reducers'\r\n\r\nconst rootReducer =  combineReducers({\r\n  chats,\r\n  user\r\n})\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>","import { all, takeEvery, put } from 'redux-saga/effects'\r\n\r\nimport {setStateCreation} from \"./actionsCreators\";\r\nimport {GET_STATE_CHAT_ACTION} from \"./actionsTypes\";\r\n// import { getAdminProjects, createAdminProject } from '@/services/chats.js'\r\n\r\nexport function* GET_STATE_CHAT() {\r\n  yield put(setStateCreation({ loading: true }))\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([takeEvery(GET_STATE_CHAT_ACTION, GET_STATE_CHAT)])\r\n}","import { \r\n  SET_STATE_CHAT_ACTION,\r\n  GET_STATE_CHAT_ACTION, \r\n} from \"./actionsTypes\";\r\nimport { IChatState } from \"./reducers\";\r\n\r\nexport const setStateCreation = (payload:  Partial<IChatState>) => {\r\n  return {\r\n    type: SET_STATE_CHAT_ACTION,\r\n    data: payload,\r\n  };\r\n};\r\n\r\nexport const getStateCreation = () => {\r\n  return {\r\n    type: GET_STATE_CHAT_ACTION,\r\n  };\r\n};\r\n","import { SET_USER_ACTION, GET_USER_ACTION } from \"./actionsTypes\";\r\nimport { IUserState } from \"./reducers\";\r\nimport firebase from '@/firebase'\r\n\r\nexport const setUseCreation = (payload: Partial<IUserState>) => {\r\n  return {\r\n    type: SET_USER_ACTION,\r\n    data: payload,\r\n  };\r\n};\r\n\r\nexport const getUseCreation = (payload: firebase.auth.UserCredential) => {\r\n  return {\r\n    type: GET_USER_ACTION,\r\n    payload\r\n  };\r\n};\r\n","import { all, takeEvery, put } from \"redux-saga/effects\";\r\n\r\nimport { setUseCreation } from \"./actionsCreators\";\r\nimport { GET_USER_ACTION } from \"./actionsTypes\";\r\n// import { getAdminProjects, createAdminProject } from '@/services/chats.js'\r\n\r\nexport function* GET_USER(action) {\r\n  yield put(setUseCreation({ loading: true }));\r\n  \r\n  const {\r\n    email, family_name, given_name, id, picture\r\n  } = action.payload.additionalUserInfo.profile;\r\n\r\n  const {accessToken} = action.payload.credential\r\n\r\n  if (action.payload.additionalUserInfo.profile) {\r\n    localStorage.setItem('accessToken', accessToken);\r\n    yield put(setUseCreation({ \r\n      lastName: family_name,\r\n      firstName: given_name,\r\n      id,\r\n      picture,\r\n      email,\r\n      loading: false,\r\n      isAuth: true,\r\n    }));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([takeEvery(GET_USER_ACTION, GET_USER)]);\r\n}\r\n","import { all } from 'redux-saga/effects'\r\nimport chat from './chat/sagas'\r\nimport user from './user/sagas'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([chat(), user()])\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducers from './reducers'\r\nimport sagas from './sagas'\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware))\r\n\r\nsagaMiddleware.run(sagas)\r\n\r\nexport default store\r\n","import { createBrowserHistory } from 'history'\r\nexport let history = createBrowserHistory({ basename: '' })\r\n","import { FC } from 'react'\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom'\r\n\r\nexport const PrivateRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => localStorage.getItem('accessToken')\r\n        ? children\r\n        : <Redirect\r\n          to={{\r\n            pathname: \"/log-in\",\r\n            state: { from: props.location }\r\n          }}\r\n        />\r\n      }\r\n    />\r\n  )\r\n}\r\n","import firebase from 'firebase/app'\r\nimport \"firebase/database\"\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_AUTH_DATA_BASE,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n})\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;","import styled from \"styled-components\";\r\n\r\nexport const MenuWrap = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 999;\r\n  height: 88px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\nexport const Wraper = styled.div`\r\n  width: 1200px;\r\n  max-width: calc(100% - 60px);\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const LogOutBtn = styled.button`\r\n  font-size: 18px;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${(props) => props.theme.colors.light};\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport { auth } from '@/firebase'\r\nimport { MenuWrap, Wraper, LogOutBtn } from './style.component'\r\n\r\nconst Menu = (): JSX.Element => {\r\n  let history = useHistory();\r\n\r\n  const logOut = () => {\r\n    auth.signOut().then(() => {\r\n      localStorage.removeItem('accessToken')\r\n      history.push(\"/log-in\");\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n  }\r\n\r\n  return (\r\n    <MenuWrap>\r\n      <Wraper>\r\n        Menu\r\n\r\n        <LogOutBtn onClick={logOut}>Log Out</LogOutBtn>\r\n      </Wraper>\r\n    </MenuWrap>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wraper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 88px;\r\n`;","import React, { FC, ReactNode } from 'react'\r\nimport Menu from '@/components/Menu'\r\n\r\nimport {Wraper} from './style.component'\r\n\r\nconst Layout: FC<ReactNode> = ({ children }) => {\r\n  return (\r\n    <Wraper >\r\n      {/* <Head>\r\n        <title>{title}</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n        <meta property=\"og:url\" content={url} />\r\n      </Head> */}\r\n      <Menu />\r\n      <main>\r\n        {children}\r\n      </main>\r\n    </Wraper>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import styled from \"styled-components\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: calc(100vh - 88px);\r\n`\r\n\r\nexport const Chat = styled.div`\r\n    display: flex;\r\n  flex-direction: column;\r\n  background-color: #222831;\r\n  width: 600px;\r\n  height: 600px;\r\n  max-width: calc(100% - 30px);\r\n  max-height: calc(100% - 30px);\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Messages = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n`\r\n\r\nexport const InputWrap = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-height: 35%;\r\n  min-height: 40px;\r\n  background-color: #30475e;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-right: 20px;\r\n`\r\n\r\nexport const Textarea = styled.div`\r\n  width: calc(100% - 30px);\r\n  height: 100%;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  color: #dddddd;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  };\r\n\r\n  &:focus {\r\n    outline: none;\r\n  };\r\n`\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  color: #dddddd;\r\n`;","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  &:not(:last-of-type){\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\n\r\nexport const MessageWrap = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  flex-direction:  ${(props) => props.myMessage\r\n    ? \"row-reverse\"\r\n    : \"row\"\r\n  };\r\n`\r\nexport const Avatar = styled.img`\r\n  height: 45px;\r\n  width: 45px;\r\n  border-radius: 50%;\r\n  object-fit:cover;\r\n  object-position: center;\r\n`\r\n\r\nexport const MessageText = styled.div`\r\n  margin: 0 20px 10px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:  ${(props) => props.myMessage\r\n    ? \"flex-end\"\r\n    : \"flex-start\"\r\n  };\r\n`\r\n\r\nexport const Name = styled.p`\r\n  background-color: #30475e;\r\n  padding: 5px 10px;\r\n  border-radius: 16px;\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  letter-spacing: .4px;\r\n`\r\n\r\nexport const Text = styled.p`\r\n margin-bottom: 0;\r\n`\r\n\r\n","import React, { useRef, useEffect } from \"react\"\r\nimport { Wrapper } from './style.component'\r\nimport { IChatMessages } from '@/pages/Chat'\r\n\r\nimport { auth } from \"@/firebase\";\r\nimport { MessageWrap, Avatar, MessageText, Name, Text } from './style.component'\r\n\r\ntype Props = {\r\n  message: IChatMessages,\r\n  key?: string\r\n}\r\n\r\nconst Message = ({ message, key }: Props): JSX.Element => {\r\n  return (\r\n    <Wrapper>\r\n      <MessageWrap myMessage={auth?.currentUser?.uid === message.uid}>\r\n        <Avatar src={message.photoURL} />\r\n        <MessageText myMessage={auth?.currentUser?.uid === message.uid}>\r\n          <Name>{message.fullName}</Name>\r\n          <Text>{message.text}</Text>\r\n        </MessageText>\r\n      </MessageWrap>\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport firebase, { firestore, auth } from \"@/firebase\";\r\nimport Layout from '@/components/Layout'\r\nimport { Wrapper, Chat, Messages, InputWrap, Textarea, StyledIcon } from './style.component'\r\nimport Message from '@/components/Message'\r\nexport interface IChatMessages {\r\n  text: string,\r\n  createdAt?: {\r\n    nanosecond: number,\r\n    seconds: number\r\n  },\r\n  uid: string,\r\n  id?: string,\r\n  photoURL: string,\r\n  fullName: string\r\n}\r\n\r\nconst Home = (): JSX.Element => {\r\n  const [message, setMessage] = useState('')\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limitToLast(25);\r\n  const [messages] = useCollectionData<IChatMessages>(query, { idField: 'id' });\r\n  const textDiv = useRef<HTMLDivElement>(null)\r\n  const last = useRef<HTMLSpanElement>(null);\r\n  \r\n  const handleChange = (e) => {\r\n    setMessage(e.target.outerText);\r\n  };\r\n\r\n  const send = async (e) => {\r\n    if ((!e.ctrlKey && e.charCode === 13) || e.type === \"click\") {\r\n      await messagesRef.add({\r\n        text: message,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid: auth?.currentUser?.uid,\r\n        photoURL: auth?.currentUser?.photoURL,\r\n        fullName: auth?.currentUser?.displayName\r\n      }).then(function () {\r\n        if (textDiv && textDiv.current) {\r\n          textDiv.current.innerHTML = ''\r\n        }\r\n        setMessage(\"\")\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (last && last.current) {\r\n      last.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [message])\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <Chat>\r\n          <Messages>\r\n            {\r\n              messages?.map(message =>\r\n                <Message\r\n                  key={message.id}\r\n                  message={message}\r\n                />)\r\n            }\r\n            <span ref={last}></span>\r\n          </Messages>\r\n          <InputWrap>\r\n            <Textarea\r\n              contentEditable={true}\r\n              onInput={handleChange}\r\n              onKeyPress={send}\r\n              ref={textDiv}\r\n            >\r\n            </Textarea>\r\n\r\n            <StyledIcon\r\n              icon={faPaperPlane}\r\n              size=\"lg\"\r\n              onClick={send}\r\n            />\r\n          </InputWrap>\r\n        </Chat>\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper =  styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wraper = styled.div`\r\n  width: 450px;\r\n  height: 500px;\r\n  max-width: calc(100% - 30px);\r\n  background-color: ${(props) => props.theme.colors.dark}4c;\r\n  border-top: 4px solid ${(props) => props.theme.colors.main};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n  box-shadow: 0 -4px ${(props) => props.theme.colors.main};\r\n  border-radius: 50%;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  margin-top: -75px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 50px;\r\n  max-width: 300px;\r\n  width: calc(100% - 30px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  margin-left: 10px;\r\n  font-size: 24px;\r\n  color: ${(props) => props.theme.colors.dark};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${(props) => props.theme.colors.dark}4c;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const InputWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 40px;\r\n  background-color: ${(props) => props.theme.colors.light};\r\n  padding: 0 10px;\r\n\r\n  &:not(:first-of-type) {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  min-width: 150px;\r\n  min-height: 40px;\r\n  margin-top: 30px;\r\n  background: ${(props) => props.theme.colors.main};\r\n  border: none;\r\n  font-size: 18px;\r\n  border-bottom: 5px solid #cc8f00;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.light};\r\n    color: #cc8f00;\r\n  }\r\n`;\r\n\r\nexport const Link = styled.button`\r\n  font-size: 18px;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${(props) => props.theme.colors.light};\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const SocialWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    &:not(:last-of-type) {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/man-300x300.e8ac51ee.png\";","import React, { FC, useCallback, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGooglePlus, faFacebook } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport {\r\n  Wraper, Img, Input, Form, InputWrap, Button, Link, SocialWrap\r\n} from './style-component'\r\n\r\nimport firebase, { auth } from '@/firebase'\r\nimport manImg from '@/assets/images/man-300x300.png'\r\nimport { getUseCreation } from '@/redux/user/actionsCreators'\r\n\r\nconst LogIn: FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [isRegister, setIsRegister] = useState(true)\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  let history = useHistory();\r\n\r\n  const register = useCallback(\r\n    (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n      auth.createUserWithEmailAndPassword(email, password)\r\n    }, [email, password],\r\n  )\r\n\r\n  console.log(auth);\r\n\r\n  const signIn = useCallback(\r\n    (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n      auth.signInWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n          dispatch(getUseCreation(res))\r\n          history.push(\"/\")\r\n        })\r\n    }, [email, password],\r\n  )\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch(getUseCreation(result))\r\n        history.push(\"/\");\r\n      }).catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Wraper>\r\n      <Img src={manImg} alt=\"avatar\" />\r\n      <Form>\r\n        <InputWrap>\r\n          <FontAwesomeIcon icon={faUser} size=\"lg\" color=\"#222831\" />\r\n          <Input\r\n            placeholder=\"Email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </InputWrap>\r\n        <InputWrap>\r\n          <FontAwesomeIcon icon={faLock} size=\"lg\" color=\"#222831\" />\r\n          <Input\r\n            placeholder=\"Password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n\r\n          />\r\n        </InputWrap>\r\n        <Button\r\n          onClick={isRegister ? register : signIn}\r\n          type=\"button\"\r\n        >{isRegister ? \"Sign Up\" : \"Sign In\"}</Button>\r\n      </Form>\r\n      <Link>Recover password</Link>\r\n      <Link onClick={() => setIsRegister(!isRegister)}>\r\n        {isRegister ? \"Sign In\" : \"Sign Up\"}\r\n      </Link>\r\n      <SocialWrap>\r\n        <FontAwesomeIcon\r\n          icon={faGooglePlus}\r\n          size=\"2x\"\r\n          color=\"#eeeeee\"\r\n          onClick={signInWithGoogle}\r\n        />\r\n        <FontAwesomeIcon icon={faFacebook} size=\"2x\" color=\"#eeeeee\" />\r\n      </SocialWrap>\r\n    </Wraper>\r\n  )\r\n}\r\n\r\nexport default LogIn\r\n","import React, { FC, useEffect } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { Wrapper } from './style.component'\r\nimport LogInForm from '@/components/LogInForm'\r\n\r\nconst LogIn: FC = () => {\r\n  return localStorage.getItem('accessToken')\r\n    ? <Redirect to=\"/\" />\r\n    : <Wrapper>\r\n      <LogInForm />\r\n    </Wrapper>\r\n\r\n}\r\n\r\nexport default LogIn\r\n","import React, { FC } from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { PrivateRoute } from '@/helpest/PrivateRouter'\r\nimport Chat from '@/pages/Chat'\r\nimport LogIn from '@pages/Log-In'\r\n\r\nconst Routes: FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/log-in\" children={<LogIn />} exact={true} />\r\n      <PrivateRoute path=\"/\" children={<Chat />} exact={true} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n\r\n","import { ThemeProvider } from \"styled-components\";\r\n\r\nconst theme = {\r\n  colors: {\r\n    dark: \"#222831\",\r\n    gray: \"#393e46\",\r\n    main: \"#ffd369\",\r\n    light: \"#eeeeee\"\r\n  },\r\n  fonts: [\"sans-serif\", \"Roboto\"],\r\n}\r\n\r\nconst Theme = ({ children }) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default Theme;","import React, { FC } from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nimport Routes from \"@/routes.tsx\";\r\nimport Theme from \"@/helpest/app/theme\";\r\nimport './reset.css'\r\n\r\nconst Wrapper = styled.section`\r\n  color: ${props => props.theme.colors.light};\r\n  background-color: ${props => props.theme.colors.gray};\r\n  min-width: 100vw;\r\n  min-height: 100vh;\r\n`\r\nconst App: FC = () => {\r\n  return (\r\n    <Theme>\r\n      <Wrapper>\r\n        <Routes />\r\n      </Wrapper>\r\n    </Theme>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router';\n\nimport store from './redux/store'\nimport { history } from '@/history'\nimport App from '@/helpest/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history} >\n         <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}